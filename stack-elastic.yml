# Maintainer: Jakub Hajek, jakub.hajek@cometari.com
#
# docker stack deploy -c stack-elastic.yml elastic
#
# The stack creates Elasticsearch cluster consiting of
# - 3 dedicated master nodes in order to keep quorum
# - 4 dedicated data nodes to manage CRUD,
# - 2 coordination node acting like kind of load balancer in multi instance environments
#
#
# Incoming requests to Elasticsearch REST API are managed through a coordination node.
#
# Kibana is deployed in Esnet and Proxy network and exposed via Traefik via HTTPS.
# Please update the access URL to kibana (label section) and add this DNS entry to
# allow LetsEncrypt to generate a certificate.
#
# Make sure that you have 4 nodes with hostnames: node-1, node-2, node-3, node-4 because
# constraints and volume persistence refers to the hostname or update the configuration accordingly.
#
# Make sure to tune your VM to run Elasticsearch cluster by executing on each server:
# sudo sysctl -w vm.max_map_count=262144
# add --default-ulimit memlock=-1 to Dockerd
# You can manage that by executing this command on each server consiting Swarm cluter: 
# 
# sudo "sed -i '/ExecStart=\/usr\/bin\/dockerd/ s/$/--default-ulimit memlock=-1/' /etc/systemd/system/docker.service.d/10-machine.conf"

version: "3.7"

services:
  master1:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-master1
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-master
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esmaster1:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm1 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G

  master2:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-master2
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-master
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esmaster2:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm2 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G

  master3:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-master3
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-master
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esmaster3:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm3 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G

  data1:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-data1
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-data
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm1 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G
  data2:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-data2
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-data
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm2 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G
  data3:
    image: amazon/opendistro-for-elasticsearch:1.3.0
    configs:
      - source: es-data3
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: jvm-options-data
        target: /usr/share/elasticsearch/config/jvm.options
    networks:
      - esnet
    volumes:
      - esdata3:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [ node.hostname == swarm3 ]
      mode: "replicated"
      endpoint_mode: dnsrr
      replicas: 1
      resources:
        limits:
          memory: 2G

networks:
  esnet:
    driver: overlay
    attachable: true
    name: esnet

volumes:
  esmaster1:
  esmaster2:
  esmaster3:

  esdata1:
  esdata2:
  esdata3:
  esdata4:

configs:
  es-master1:
    name: es-master1
    file: es-config/es-master1.yml
  es-master2:
    name: es-master2
    file: es-config/es-master2.yml
  es-master3:
    name: es-master3
    file: es-config/es-master3.yml

  es-data1:
    name: es-data1
    file: es-config/es-data1.yml
  es-data2:
    name: es-data2
    file: es-config/es-data2.yml
  es-data3:
    name: es-data3
    file: es-config/es-data3.yml

  jvm-options-coordination:
    name: jvm-options-coordination
    file: es-config/jvm.coordination.options
  jvm-options-data:
    name: jvm-options-data
    file: es-config/jvm.data.options
  jvm-options-master:
    name: jvm-options-master
    file: es-config/jvm.master.options
